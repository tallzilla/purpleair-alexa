name: deploy to lambda
on:
  schedule:
    - cron:  '0 * * * *'
  push:
    branches:
      - main
jobs:
  deploy_zip:
    name: deploy lambda function
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: checkout source code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t site-packages; fi
      - name: Create envfile
        run: |
          echo '
          MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}
          PURPLEAIR_READ_KEY=${{ secrets.PURPLEAIR_READ_KEY }}
          PURPLEAIR_WRITE_KEY=${{ secrets.PURPLEAIR_WRITE_KEY }}          
          ' > ./.env 
      - name: wget purpleair
        uses: wei/wget@v1
        with:
          args: -O purpleair.json https://api.purpleair.com/v1/sensors?api_key=${{ secrets.PURPLEAIR_READ_KEY }}&fields=latitude%2Clongitude%2Cpm2.5
      - name: Test with pytest
        run: |
          export PYTHONPATH='$PYTHONPATH:site-packages' && echo $PYTHONPATH && python -m pytest ./tests/test.py
      - name: Build zip
        run: |
          cd site-packages && zip -r ../deployment.zip ../.env ../*.py ../*.json *
      - name: Push zip to lambda
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: purpleair-alexa
          zip_file: deployment.zip